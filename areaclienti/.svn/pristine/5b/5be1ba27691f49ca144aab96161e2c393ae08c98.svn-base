/**
 * Script principale
 */

/* Costanti */


var contextPathAccount = "http://ws.services.ltc-logistics.it/account/ws";
var wsLogin = "/login";
var wsLogout = "/logout";
var wsPreferenze = "/preferenze";

var contextPathTracking = "http://ws.services.ltc-logistics.it/tracking/ws";
var pathOrdini = "/ordini";
var pathStorico = "/storico";
var wsLista = "/lista";
var wsDettaglio = "/dettaglio";
var wsArchivia = "/archivia";
var wsElimina = "/elimina";

/* Funzioni */

//Genera un suffisso da appendere alle chiamate POST per evitare che alcuni browser facciano caching
var getAntiCacheSuffix = function() {
	return '?v=' + Date.now();
};

//Funzione utile a cambiare elementi nello schermo per mostrare il caricamento
var loading = function(isLoading) {
	if (isLoading) {
		document.getElementById('bottoneRicerca').innerHTML = '<i class="fa fa-refresh fa-spin" aria-hidden="true"></i> sto cercando...';
		document.getElementById("main").style.cursor = "progress";
	} else {
		document.getElementById("main").style.cursor = "auto";
		document.getElementById('bottoneRicerca').innerHTML = 'Cerca';
	}
};

// Creazione del modulo Angular, app principale.
var ltcApp = angular.module('ltcApp', [ 'ngRoute', 'angular-table', 'angular-tabs' ]);

// Configurazione delle rotte
ltcApp.config(function($routeProvider) {
	$routeProvider
	.when('/', {
		templateUrl : 'resources/html/pages/login.html',
		controller : 'loginController'
	})
	.when('/login', {
		templateUrl : 'resources/html/pages/login.html',
		controller : 'loginController'
	})
	.when('/reimposta', {
		templateUrl : 'resources/html/pages/resetPassword.html',
		controller : 'errorController'
	})
	.when('/index', {
		templateUrl : 'resources/html/pages/choose.html',
		controller : 'indexController'
	})
	.when('/lista', {
		templateUrl : 'resources/html/pages/list.html',
		controller : 'listController'
	})
	.when('/storico', {
		templateUrl : 'resources/html/pages/archive.html',
		controller : 'archiveController'
	})
	.when('/preferenze', {
		templateUrl : 'resources/html/pages/preferences.html',
		controller : 'preferencesController'
	})
	.when('/dettaglio', {
		templateUrl : 'resources/html/pages/detail.html',
		controller : 'detailController'
	})
	.when('/dettaglioarchiviato', {
		templateUrl : 'resources/html/pages/detailArchived.html',
		controller : 'archivedDetailController'
	})
	.when('/errore', {
		templateUrl : 'resources/html/pages/error.html',
		controller : 'errorController'
	})
	.otherwise({redirectTo:'/errore'});
});

// Controller principale e inject Angular's $scope
ltcApp.controller('mainController', function($scope, $http, $location) {

	// Variabili condivise in tutta la app
	$scope.username = undefined;
	$scope.password = undefined;

});

ltcApp.controller('loginController', function($scope, $http, $location) {

	$scope.message = '';

	// Funzione di login, se va a buon fine setta le variabili di sessione.
	$scope.login = function() {
		var loginData = {
			username : $scope.username,
			password : $scope.password
		};
		$http.post(contextPathAccount + wsLogin, loginData).then(
				function(response) {
					if (response.status == 200) {
						sessionStorage.username = $scope.username;
						sessionStorage.password = $scope.password;
						sessionStorage.nome = response.data.oggetto.nome;
						sessionStorage.cognome = response.data.oggetto.cognome;
						sessionStorage.setItem("permessi", JSON.stringify(response.data.oggetto.permessi));
						sessionStorage.setItem("sedi", JSON.stringify(response.data.oggetto.sedi));
						sessionStorage.setItem("commesse", JSON.stringify(response.data.oggetto.commesse));
						sessionStorage.ricerca = 'true';
						sessionStorage.ricercaArchiviati = 'true';
						$location.path('/index');
						$location.replace();
					} else {
						$scope.message = "Nome utente o password non corretti."
					}
				}, function(response) {
					//Errore
					$scope.message = "Ci sono stati problemi con il login.";
				});
	};
});

ltcApp.controller('indexController', function($scope) {
	
	$scope.message = 'Ciao ' + sessionStorage.nome + " " + sessionStorage.cognome + "!";
	
});

ltcApp.controller('listController', function($scope, $http, $location, $filter) {
	
	if (sessionStorage.username == null || sessionStorage.username == undefined) {
		$location.path('/login');
		$location.replace();
	}
	
	$scope.message = '';
	
	$scope.configurazioneTabella = { itemsPerPage: 10, fillLastPage: true, maxPages : 10 };
	
	//Recupero la lista dei clienti gestibili per raffinare le query, se presente
	$scope.clienti = JSON.parse(sessionStorage.getItem("commesse"));
	$scope.cliente = $scope.clienti[0];
	
	//In base al tipo di account mostro o nascondo la lista dei clienti gestibili
	if ($scope.clienti.length > 1) {
		$scope.mostraCliente = true;
	} else {
		$scope.mostraCliente = false;
	}
	//$scope.mostraCliente = true;
		
	//Recupero la lista degli ordini già cercati, se presente nascondo il pannello di ricerca.
	//Nel sessionStorage posso salvare solo stringhe, undefined è visto come una stringa...	
	if (sessionStorage.ricerca == 'true') {
		$(".collapse").collapse('show');
	} else {
		$(".collapse").collapse('hide');
	}
	
	var ordini = sessionStorage.getItem("listaOrdini");
	if (ordini == "undefined" || ordini == undefined || ordini == null) {
		$scope.ordini = [];
	} else {
		$scope.ordini = JSON.parse(ordini);
	}
	
	$scope.cerca = function() {
		if (sessionStorage.ricerca == 'true') {
			loading(true);
			var filtro = {
				username : sessionStorage.username,
				password : sessionStorage.password,
				cliente : $scope.cliente.id,
				nOrdine : $scope.nOrdine,
				dataDa : document.getElementById('dpd1').value,
				dataA : document.getElementById('dpd2').value,
				destinatario : $scope.destinatario,
				ddt : $scope.ddt,
				stato : $scope.stato,
				nrLista : $scope.nrLista
			};
			$http.post(contextPathTracking + pathOrdini + wsLista + getAntiCacheSuffix(), filtro).then(
					function(response) {
						if (response.status == 200) {
							$scope.ordini = response.data.lista;
							sessionStorage.setItem("listaOrdini", JSON.stringify(response.data.lista));
							sessionStorage.ricerca = 'false';
							$(".collapse").collapse('hide');
						} else if (response.status == 401) {
							sessionStorage.clear();
							$location.path('/login');
							$location.replace();
						} else {
							$scope.message = "La richiesta non e' andata a buon fine, prova di nuovo"
						}
						loading(false);
					}, function(response) {
						//Errore
						$scope.message = "Ci sono stati problemi di comunicazione con il server, prova di nuovo.";
						loading(false);
					});
		} else {
			sessionStorage.ricerca = 'true';
			$(".collapse").collapse('show');
		}
		
	}
	
	$scope.visualizzaDettaglio = function(id) {
		var dettaglio = {
				username : sessionStorage.username,
				password : sessionStorage.password,
				idSpedizione : id
		}
		$http.post(contextPathTracking + pathOrdini + wsDettaglio + getAntiCacheSuffix(), dettaglio).then(
				function(response) {
					if (response.status == 200) {
						sessionStorage.setItem("dettaglioOrdine", JSON.stringify(response.data.oggetto));
						$location.path('/dettaglio');
						$location.replace();
					} else if (response.status == 401) {
						sessionStorage.clear();
						$location.path('/login');
						$location.replace();
					} else {
						$scope.message = "La richiesta non e' andata a buon fine, prova di nuovo"
						sessionStorage.dettaglioOrdine = undefined;
					}
				}, function(response) {
					//Errore
					$scope.message = "Ci sono stati problemi di comunicazione con il server, prova di nuovo.";
					sessionStorage.dettaglioOrdine = undefined;
				});
	};
});

ltcApp.controller('archiveController', function($scope, $http, $location, $filter) {
	
	if (sessionStorage.username == null || sessionStorage.username == undefined) {
		$location.path('/login');
		$location.replace();
	}

	$scope.message = '';
	
	$scope.configurazioneTabella = { itemsPerPage: 10, fillLastPage: true, maxPages : 10 };
	
	//Recupero la lista dei clienti gestibili per raffinare le query, se presente
	$scope.clienti = JSON.parse(sessionStorage.getItem("commesse"));
	$scope.cliente = $scope.clienti[0];
	
	//In base al tipo di account mostro o nascondo la lista dei clienti gestibili
	if ($scope.clienti.length > 1) {
		$scope.mostraCliente = true;
	} else {
		$scope.mostraCliente = false;
	}
		
	//Recupero la lista degli ordini già cercati, se presente nascondo il pannello di ricerca.
	//Nel sessionStorage posso salvare solo stringhe, undefined è visto come una stringa...	
	if (sessionStorage.ricercaArchiviati == 'true') {
		$(".collapse").collapse('show');
	} else {
		$(".collapse").collapse('hide');
	}
	
	var ordini = sessionStorage.getItem("listaOrdiniArchiviati");
	if (ordini == "undefined" || ordini == undefined || ordini == null) {
		$scope.ordini = [];
	} else {
		$scope.ordini = JSON.parse(ordini);
	}
		
	$scope.cerca = function() {
		if (sessionStorage.ricercaArchiviati == 'true') {
			loading(true);
			var filtro = {
				username : sessionStorage.username,
				password : sessionStorage.password,
				cliente : $scope.cliente.id,
				nOrdine : $scope.nOrdine,
				dataDa : document.getElementById('dpd1').value,
				dataA : document.getElementById('dpd2').value,
				destinatario : $scope.destinatario,
				ddt : $scope.ddt,
				stato : $scope.stato,
				nrLista : $scope.nrLista
			};
			$http.post(contextPathTracking + pathStorico + wsLista + getAntiCacheSuffix(), filtro).then(
					function(response) {
						if (response.status == 200) {
							$scope.ordini = response.data.lista;
							sessionStorage.setItem("listaOrdiniArchiviati", JSON.stringify(response.data.lista));
							sessionStorage.ricercaArchiviati = 'false';
							$(".collapse").collapse('hide');
						} else if (response.status == 401) {
							sessionStorage.clear();
							$location.path('/login');
							$location.replace();
						} else {
							$scope.message = "La richiesta non e' andata a buon fine, prova di nuovo"
						}
						loading(false);
					}, function(response) {
						//Errore
						$scope.message = "Ci sono stati problemi di comunicazione con il server, prova di nuovo.";
						loading(false);
					});
		} else {
			sessionStorage.ricercaArchiviati = 'true';
			$(".collapse").collapse('show');
		}
		
	}
	
	$scope.visualizzaDettaglio = function(id) {
		var dettaglio = {
				username : sessionStorage.username,
				password : sessionStorage.password,
				idSpedizione : id
		}
		$http.post(contextPathTracking + pathStorico + wsDettaglio + getAntiCacheSuffix(), dettaglio).then(
				function(response) {
					if (response.status == 200) {
						sessionStorage.setItem("dettaglioOrdineArchiviato", JSON.stringify(response.data.oggetto));
						$location.path('/dettaglioarchiviato');
						$location.replace();
					} else if (response.status == 401) {
						sessionStorage.clear();
						$location.path('/login');
						$location.replace();
					} else {
						$scope.message = "La richiesta non e' andata a buon fine, prova di nuovo"
						sessionStorage.dettaglioOrdine = undefined;
					}
				}, function(response) {
					//Errore
					$scope.message = "Ci sono stati problemi di comunicazione con il server, prova di nuovo.";
					sessionStorage.dettaglioOrdine = undefined;
				});
	};
});

ltcApp.controller('preferencesController', function($scope, $http) {
	
	if (sessionStorage.username == null || sessionStorage.username == undefined) {
		$location.path('/login');
		$location.replace();
	}
	
	$scope.message = '';
	
	$scope.cambia = function() {
		var cambioPassword = {
				username : sessionStorage.username,
				password : sessionStorage.password,
				nuovaPassword : $scope.password
		}
		$http.post(contextPathAccount + wsPreferenze + getAntiCacheSuffix(), cambioPassword).then(
				function(response) {
					if (response.status == 200) {
						sessionStorage.password = $scope.password;
						$scope.message = "Password modificata con successo";
					} else if (response.data.status == "AUTHFAIL") {
						sessionStorage.clear();
						$location.path('/login');
						$location.replace();
					} else {
						$scope.message = "La richiesta non e' andata a buon fine, prova di nuovo";
						sessionStorage.dettaglioOrdine = undefined;
					}
				}, function(response) {
					//Errore
					$scope.message = "Ci sono stati problemi di comunicazione con il server, prova di nuovo.";
					sessionStorage.dettaglioOrdine = undefined;
				});
	};
});

ltcApp.controller('detailController', function($scope, $location, $http) {
	
	if (sessionStorage.username == null || sessionStorage.username == undefined) {
		$location.path('/login');
		$location.replace();
	}
	
	$scope.message = '';
	$scope.ordine = JSON.parse(sessionStorage.getItem("dettaglioOrdine"));
	
	$scope.indietro = function() {
		$location.path('/lista');
		$location.replace();
	};
	
	$scope.archivia = function() {
		var archivia = {
				username : sessionStorage.username,
				password : sessionStorage.password,
				idSpedizione : $scope.ordine.id
		}
		$http.post(contextPathTracking + pathOrdini + wsArchivia + getAntiCacheSuffix(), archivia).then(
				function(response) {
					if (response.status == 200) {
						sessionStorage.setItem("listaOrdini", undefined);
						$location.path('/lista');
						$location.replace();
					} else if (response.status == 401) {
						sessionStorage.clear();
						$location.path('/login');
						$location.replace();
					} else {
						$scope.message = "La richiesta non e' andata a buon fine, prova di nuovo"
						sessionStorage.dettaglioOrdine = undefined;
					}
				}, function(response) {
					//Errore
					$scope.message = "Ci sono stati problemi di comunicazione con il server, prova di nuovo.";
					sessionStorage.dettaglioOrdine = undefined;
				});
	};
});

ltcApp.controller('archivedDetailController', function($scope, $location, $http) {
	
	if (sessionStorage.username == null || sessionStorage.username == undefined) {
		$location.path('/login');
		$location.replace();
	}
	
	$scope.message = '';
	$scope.ordine = JSON.parse(sessionStorage.getItem("dettaglioOrdineArchiviato"));
	
	$scope.indietro = function() {
		$location.path('/storico');
		$location.replace();
	};
	
	$scope.elimina = function() {
		var elimina = {
				username : sessionStorage.username,
				password : sessionStorage.password,
				idSpedizione : $scope.ordine.id
		}
		$http.post(contextPathTracking + pathStorico + wsElimina + getAntiCacheSuffix(), elimina).then(
				function(response) {
					if (response.status == 200) {
						sessionStorage.setItem("listaOrdiniArchiviati", undefined);
						$location.path('/storico');
						$location.replace();
					} else if (response.status == 401) {
						sessionStorage.clear();
						$location.path('/login');
						$location.replace();
					} else {
						$scope.message = "La richiesta non e' andata a buon fine, prova di nuovo"
						sessionStorage.dettaglioOrdine = undefined;
					}
				}, function(response) {
					//Errore
					$scope.message = "Ci sono stati problemi di comunicazione con il server, prova di nuovo.";
					sessionStorage.dettaglioOrdine = undefined;
				});
	};
});

ltcApp.controller('errorController', function($scope) {
	$scope.message = '';
});

/*Controller del menù laterale*/
ltcApp.controller('menuController', function($scope, $location, $http) {
	$scope.message = '';
	$scope.logout = function() {
		//Chiamata al WS di logout
		var logoutData = {
			username : sessionStorage.username,
			password : sessionStorage.password
		};
		$http.post(contextPathAccount + wsLogout, logoutData).then(
			function(response) {
				if (response.status == 200) {
					//Successo
				} else {
					//Fallimento
					$scope.message = "Nome utente o password non corretti."
				}
			}, function(response) {
				//Errore
				$scope.message = "Ci sono stati problemi con il logout.";
			});
		//Pulisco in ogni caso lo storage e porto l'utente fuori.
		sessionStorage.clear();
		$location.path('/login');
		$location.replace();
	};
});
